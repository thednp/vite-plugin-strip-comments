{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import { type Plugin } from \"vite\";\n\nexport type StripCommentsPlugin = Plugin & {\n  name: string;\n  enforce: \"pre\" | \"post\" | undefined;\n  transform: (\n    code: string,\n    id?: string,\n  ) => string;\n};\n\nexport type StripCommentsConfig = {\n  type: \"none\" | \"keep-legal\" | \"istanbul\";\n  enforce: \"pre\" | \"post\" | undefined;\n};\n\nconst StripCommentsDefaultConfig: StripCommentsConfig = {\n  type: \"istanbul\",\n  enforce: \"pre\",\n};\n\nconst stripComments = (cfg: Partial<StripCommentsConfig> = {}) => {\n  const config: Partial<StripCommentsConfig> = {\n    type:\n      ([\"none\", \"keep-legal\", \"istanbul\"].some((x) => x === cfg.type)\n        ? cfg.type\n        : StripCommentsDefaultConfig.type) as StripCommentsConfig[\"type\"],\n    enforce:\n      ([\"pre\", \"post\"].some((x) => x === cfg.enforce)\n        ? cfg.enforce\n        : StripCommentsDefaultConfig.enforce) as StripCommentsConfig[\"enforce\"],\n  };\n\n  return {\n    name: \"vite-plugin-strip-comments\",\n    enforce: config.enforce,\n    transform(code: string, id?: string) {\n      /* istanbul ignore if @preserve */\n      if (!id || id.includes(\"node_modules\")) return code;\n      let result = code;\n      let match: string;\n\n      const matchesArray = Array.from(code.matchAll(\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/gm,\n      ));\n\n      for (let i = 0; i < matchesArray.length; i += 1) {\n        // capture first match\n        [match] = matchesArray[i];\n\n        switch (config.type) {\n          case \"keep-legal\":\n            if (![\"@legal\", \"@license\"].some((x) => match.includes(x))) {\n              result = result.replaceAll(match, \"\");\n            }\n            break;\n          case \"istanbul\":\n            if (match.includes(\"istanbul\")) {\n              /* istanbul ignore next @preserve */\n              result = result.replaceAll(match, \"\");\n            }\n            break;\n          case \"none\":\n          default:\n            result = result.replaceAll(match, \"\");\n        }\n      }\n\n      return result;\n    },\n  } satisfies StripCommentsPlugin;\n};\n\nexport default stripComments;\n"],"names":["StripCommentsDefaultConfig","stripComments","cfg","config","x","code","id","result","match","matchesArray","i"],"mappings":"aAgBA,MAAMA,EAAkD,CACtD,KAAM,WACN,QAAS,KACX,EAEMC,EAAgB,CAACC,EAAoC,KAAO,CAChE,MAAMC,EAAuC,CAC3C,KACG,CAAC,OAAQ,aAAc,UAAU,EAAE,KAAMC,GAAMA,IAAMF,EAAI,IAAI,EAC1DA,EAAI,KACJF,EAA2B,KACjC,QACG,CAAC,MAAO,MAAM,EAAE,KAAMI,GAAMA,IAAMF,EAAI,OAAO,EAC1CA,EAAI,QACJF,EAA2B,OACnC,EAEO,MAAA,CACL,KAAM,6BACN,QAASG,EAAO,QAChB,UAAUE,EAAcC,EAAa,CAEnC,GAAI,CAACA,GAAMA,EAAG,SAAS,cAAc,EAAU,OAAAD,EAC/C,IAAIE,EAASF,EACTG,EAEE,MAAAC,EAAe,MAAM,KAAKJ,EAAK,SACnC,2BAAA,CACD,EAED,QAASK,EAAI,EAAGA,EAAID,EAAa,OAAQC,GAAK,EAI5C,OAFC,CAAAF,CAAK,EAAIC,EAAaC,CAAC,EAEhBP,EAAO,KAAM,CACnB,IAAK,aACE,CAAC,SAAU,UAAU,EAAE,KAAMC,GAAMI,EAAM,SAASJ,CAAC,CAAC,IAC9CG,EAAAA,EAAO,WAAWC,EAAO,EAAE,GAEtC,MACF,IAAK,WACCA,EAAM,SAAS,UAAU,IAElBD,EAAAA,EAAO,WAAWC,EAAO,EAAE,GAEtC,MACF,IAAK,OACL,QACWD,EAAAA,EAAO,WAAWC,EAAO,EAAE,CAAA,CAInC,OAAAD,CAAA,CAEX,CACF"}