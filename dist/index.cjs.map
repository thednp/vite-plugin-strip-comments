{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import { type Plugin } from \"vite\";\n\nexport type StripCommentsPlugin = Plugin<StripCommentsConfig> & {\n  name: string;\n  enforce: \"pre\" | \"post\" | undefined;\n  apply: \"build\";\n  transform: (\n    code: string,\n    id?: string,\n  ) => {\n    code: string;\n    map: string | null;\n  };\n};\n\nexport type StripCommentsConfig = {\n  type: \"none\" | \"keep-legal\";\n  enforce: \"pre\" | \"post\" | undefined;\n};\n\nconst StripCommentsDefaultConfig: StripCommentsConfig = {\n  type: \"keep-legal\",\n  enforce: \"pre\",\n};\n\nconst stripComments = (cfg: Partial<StripCommentsConfig> = {}) => {\n  const config: Partial<StripCommentsConfig> = {\n    type:\n      ([\"none\", \"keep-legal\"].some((x) => x === cfg.type)\n        ? cfg.type\n        : StripCommentsDefaultConfig.type),\n    enforce:\n      ([\"pre\", \"post\"].some((x) => x === cfg.enforce)\n        ? cfg.enforce\n        : StripCommentsDefaultConfig.enforce),\n  };\n\n  return {\n    name: \"vite-plugin-strip-comments\",\n    enforce: config.enforce,\n    apply: \"build\",\n    transform(code: string, id?: string): { code: string; map: null } {\n      /* istanbul ignore if @preserve */\n      if (!id || id.includes(\"node_modules\") || !/\\.([jt]sx?)$/.test(id)) {\n        return { code, map: null };\n      }\n      let result = code;\n      let match: string;\n\n      const matchesArray = Array.from(code.matchAll(\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\*\\*.*?\\*\\/|\\/\\/.*(?=\\n)?/gm,\n      ));\n\n      for (let i = 0; i < matchesArray.length; i += 1) {\n        // first match\n        [match] = matchesArray[i];\n\n        switch (config.type) {\n          case \"keep-legal\":\n            if (![\"@legal\", \"@license\"].some((x) => match.includes(x))) {\n              result = result.replace(match, \"\");\n            }\n            break;\n          case \"none\":\n          default:\n            result = result.replace(match, \"\");\n        }\n      }\n\n      return { code: result, map: null };\n    },\n  } satisfies StripCommentsPlugin;\n};\n\nexport default stripComments;\n"],"names":["StripCommentsDefaultConfig","stripComments","cfg","config","x","code","id","result","match","matchesArray","i"],"mappings":"aAoBA,MAAMA,EAAkD,CACtD,KAAM,aACN,QAAS,KACX,EAEMC,EAAgB,CAACC,EAAoC,KAAO,CAChE,MAAMC,EAAuC,CAC3C,KACG,CAAC,OAAQ,YAAY,EAAE,KAAMC,GAAMA,IAAMF,EAAI,IAAI,EAC9CA,EAAI,KACJF,EAA2B,KACjC,QACG,CAAC,MAAO,MAAM,EAAE,KAAMI,GAAMA,IAAMF,EAAI,OAAO,EAC1CA,EAAI,QACJF,EAA2B,OACnC,EAEO,MAAA,CACL,KAAM,6BACN,QAASG,EAAO,QAChB,MAAO,QACP,UAAUE,EAAcC,EAA0C,CAE5D,GAAA,CAACA,GAAMA,EAAG,SAAS,cAAc,GAAK,CAAC,eAAe,KAAKA,CAAE,EACxD,MAAA,CAAE,KAAAD,EAAM,IAAK,IAAK,EAE3B,IAAIE,EAASF,EACTG,EAEE,MAAAC,EAAe,MAAM,KAAKJ,EAAK,SACnC,gDAAA,CACD,EAED,QAASK,EAAI,EAAGA,EAAID,EAAa,OAAQC,GAAK,EAI5C,OAFC,CAAAF,CAAK,EAAIC,EAAaC,CAAC,EAEhBP,EAAO,KAAM,CACnB,IAAK,aACE,CAAC,SAAU,UAAU,EAAE,KAAMC,GAAMI,EAAM,SAASJ,CAAC,CAAC,IAC9CG,EAAAA,EAAO,QAAQC,EAAO,EAAE,GAEnC,MACF,IAAK,OACL,QACWD,EAAAA,EAAO,QAAQC,EAAO,EAAE,CAAA,CAIvC,MAAO,CAAE,KAAMD,EAAQ,IAAK,IAAK,CAAA,CAErC,CACF"}