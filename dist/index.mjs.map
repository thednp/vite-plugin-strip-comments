{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["export type StripCommentsPlugin = {\n  name: string;\n  enforce: \"pre\" | \"post\";\n  transform: (\n    code: string,\n    id?: string,\n  ) => string;\n};\n\nexport type StripCommentsConfig = {\n  type: \"none\" | \"keep-legal\" | \"istanbul\";\n  enforce: \"pre\" | \"post\";\n};\n\nconst StripCommentsDefaultConfig: StripCommentsConfig = {\n  type: \"istanbul\",\n  enforce: \"pre\",\n};\n\nconst stripComments = (cfg: Partial<StripCommentsConfig> = {}) => {\n  const config: Partial<StripCommentsConfig> = {};\n  config.type = [\"none\", \"keep-legal\", \"istanbul\"].some((x) => x === cfg.type)\n    ? cfg.type as StripCommentsConfig[\"type\"]\n    : StripCommentsDefaultConfig.type;\n  config.enforce = [\"pre\", \"post\"].some((x) => x === cfg.enforce)\n    ? cfg.enforce as StripCommentsConfig[\"enforce\"]\n    : StripCommentsDefaultConfig.enforce;\n\n  return {\n    name: \"vite-plugin-strip-comments\",\n    enforce: config.enforce,\n    transform(code: string, id?: string) {\n      /* istanbul ignore if @preserve */\n      if (!id || id.includes(\"node_modules\")) return code;\n      let result = code;\n\n      const matches = code.matchAll(\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/gm,\n      );\n      const matchesArray = Array.from(matches);\n      let match: string;\n\n      for (let i = 0; i < matchesArray.length; i += 1) {\n        // capture first match\n        [match] = matchesArray[i];\n\n        switch (config.type) {\n          case \"keep-legal\":\n            if (![\"@legal\", \"@license\"].some((x) => match.includes(x))) {\n              result = result.replaceAll(match, \"\");\n            }\n            break;\n          case \"istanbul\":\n            if (match.includes(\"istanbul\")) {\n              /* istanbul ignore next @preserve */\n              result = result.replaceAll(match, \"\");\n            }\n            break;\n          case \"none\":\n          default:\n            result = result.replaceAll(match, \"\");\n        }\n      }\n\n      return result;\n    },\n  } satisfies StripCommentsPlugin;\n};\n\nexport default stripComments;\n"],"names":["StripCommentsDefaultConfig","stripComments","cfg","config","x","code","id","result","matches","matchesArray","match","i"],"mappings":"AAcA,MAAMA,IAAkD;AAAA,EACtD,MAAM;AAAA,EACN,SAAS;AACX,GAEMC,IAAgB,CAACC,IAAoC,OAAO;AAChE,QAAMC,IAAuC,CAAC;AAC9C,SAAAA,EAAO,OAAO,CAAC,QAAQ,cAAc,UAAU,EAAE,KAAK,CAACC,MAAMA,MAAMF,EAAI,IAAI,IACvEA,EAAI,OACJF,EAA2B,MAC/BG,EAAO,UAAU,CAAC,OAAO,MAAM,EAAE,KAAK,CAACC,MAAMA,MAAMF,EAAI,OAAO,IAC1DA,EAAI,UACJF,EAA2B,SAExB;AAAA,IACL,MAAM;AAAA,IACN,SAASG,EAAO;AAAA,IAChB,UAAUE,GAAcC,GAAa;AAEnC,UAAI,CAACA,KAAMA,EAAG,SAAS,cAAc,EAAU,QAAAD;AAC/C,UAAIE,IAASF;AAEb,YAAMG,IAAUH,EAAK;AAAA,QACnB;AAAA,MACF,GACMI,IAAe,MAAM,KAAKD,CAAO;AACnC,UAAAE;AAEJ,eAASC,IAAI,GAAGA,IAAIF,EAAa,QAAQE,KAAK;AAI5C,gBAFC,CAAAD,CAAK,IAAID,EAAaE,CAAC,GAEhBR,EAAO,MAAM;AAAA,UACnB,KAAK;AACH,YAAK,CAAC,UAAU,UAAU,EAAE,KAAK,CAACC,MAAMM,EAAM,SAASN,CAAC,CAAC,MAC9CG,IAAAA,EAAO,WAAWG,GAAO,EAAE;AAEtC;AAAA,UACF,KAAK;AACC,YAAAA,EAAM,SAAS,UAAU,MAElBH,IAAAA,EAAO,WAAWG,GAAO,EAAE;AAEtC;AAAA,UACF,KAAK;AAAA,UACL;AACW,YAAAH,IAAAA,EAAO,WAAWG,GAAO,EAAE;AAAA,QAAA;AAInC,aAAAH;AAAA,IAAA;AAAA,EAEX;AACF;"}